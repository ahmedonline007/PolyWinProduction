{"version":3,"sources":["redux/reducers/initialState.js","redux/reducers/index.js","redux/reducers/reduces.js","redux/store/index.js","screens/LoadingPage/LoadingPage.js","router/router.js","App.js","registerServiceWorker.js","index.js"],"names":["ListAccounts","listCategory","listProducts","ListDataSheets","ListCatalogue","ListItemType","ListCurrency","ListSupplier","ListStore","ListMessage","ListBank","ListBankForDropDown","ListPurchase","LISTFACTOR","LISTPRICELST","LISTCLIENTCOMM","ListCategoryGallery","listCategoryForDrop","ListCategoryChildGallery","listCategoryGalleryForDrop","listCategoryChildGalleryForDrop","listGallery","ListColors","ListParentCategory","ListProductName","ListParentProductCategory","ListParentProductCategoryForDrop","ListProductCategoryForDrop","ListProductColorForDrop","ListProductNameForDrop","ListItemTypeForDrop","ListCurrencyForDrop","ListSupplierForDrop","ListStoreForDrop","ListParentCategoryForDrop","ListSubCategory","ListSubCategoryForDrop","ListProductForDrop","ListProductIngredient","ListDescount","ListAgent","ListPayment","ListBankOut","ListPaymentForDrop","ListBankOutForDrop","ListProductIngredientAccess","ListEmployee","ListRoleDD","objCompanyInfo","combineReducers","reduces","state","initialState","action","type","obj","data","payload","sessionStorage","setItem","userType","token","removeItem","objEmployee","roles_id","name","rolePermission","listAcc","ids","forEach","id","indexListAcc","findIndex","x","splice","listDataSheets","map","xx","filter","listDataSheet","indexDataSheet","listCatalogue","listCatalogues","indexCatalogues","ListFactor","listFactor","listFactors","indexFactors","ListPriceLst","listPriceLst","listPriceLsts","indexPriceLsts","ListClientComm","listClientComm","listClientComms","indexClientComms","ListCategoryType","listCategoryType","_listCategoryType","indexCategoryType","objCategoryType","item","objDept","value","label","push","_listCategoryGallery","indexCategoryGallery","listCategoryGallery","objCategoryGallery","categoryName","_listCategoryChildGallery","indexCategoryChildGallery","listCategoryChildGallery","objCategoryChildGallery","categoryChildName","_listGallery","indexGallery","_ListColors","indexColors","listColors","_ListParentCategory","indexParentCategory","listParentCategory","_ListProductName","indexProductName","listProductName","_ListParentProductCategory","indexParentProductCategory","listParentProductCategory","objCategory","catgoryName","_listCategory","indexCategory","ListCategory","objProductName","productName","objProductColor","colorName","objProductCategory","_listProducts","indexProducts","ListProducts","objParentCategory","_listSubCategory","indexSubCategory","listSubCategory","objSubCategory","objProduct","_listProductIngredient","indexProductIngredient","listProductIngredient","ListAccountsActiveNotActive","_objParentCategory","_listDescount","indexDescount","listDescount","_listProductIngredientAccess","indexProductIngredientAccess","listProductIngredientAccess","CountSupplier","ListSuppliers","indexSuppliers","objSuppliers","objSupplier","ListStores","indexStores","objStores","objStore","storeName","objBankOuts","objBankOut","nameBank","ListBankOuts","indexBankOuts","ListEmployees","indexemps","objRoles","objRole","ListItemTypes","indexItemTypes","objItemTypes","objItemType","nameItemType","ListBanks","indexListBanks","objBanks","objBank","ListBankForDrop","objPayments","objPayment","namePaymentMethod","ListCurrencys","indexCurrencys","objCurrencys","objCurrency","nameCurrency","ListPurchases","indexPurchasess","ListBankOutDeposite","indexBankOut","ListBankOutDepositedec","indexBankOutdec","create","createStore","reducers","applyMiddleware","thunk","LoadingPage","props","style","position","left","top","zIndex","width","height","margin","border","borderRadius","borderTop","LayOut","lazy","DashBoard","Accounts","Products","PurchaseOrder","PurchaseOrderAddEdit","Login","DataSheet","Catalogue","Factor","Agents","PriceLst","ClientComments","Employee","CompanyInfo","CategoryType","CategoryGallery","GalleryImage","GallaryFile","GallaryVideo","Colors","ParentCategory","ProductName","ProductInfo","Category","ChildCategory","ProductIngredient","ProductIngredientAccessory","Descount","ParentProductCategory","CategoryChildGallery","Supplier","Store","ItemType","Messages","Bank","Purchase","Currency","MainPurchase","ActiveUnActiveAccount","Banks","RouterDocument","fallback","path","component","store","App","window","location","pathname","href","isTrust","isLoading","Component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"6RACI,GACIA,aAAc,GACdC,aAAc,GACdC,aAAc,GACdC,eAAgB,GAChBC,cAAe,GACfC,aAAc,GACdC,aAAc,GACdC,aAAc,GACdC,UAAW,GACXC,YAAa,GACbC,SAAU,GACVC,oBAAqB,GACrBC,aAAc,GACdC,WAAY,GACZC,aAAc,GACdC,eAAgB,GAChBC,oBAAqB,GACrBC,oBAAqB,GACrBC,yBAA0B,GAC1BC,2BAA4B,GAC5BC,gCAAiC,GACjCC,YAAa,GACbC,WAAY,GACZC,mBAAoB,GACpBC,gBAAiB,GACjBC,0BAA2B,GAC3BC,iCAAkC,GAClCC,2BAA4B,GAC5BC,wBAAyB,GACzBC,uBAAwB,GACxBC,oBAAqB,GACrBC,oBAAqB,GACrBC,oBAAqB,GACrBC,iBAAkB,GAClBC,0BAA2B,GAC3BC,gBAAiB,GACjBC,uBAAwB,GACxBC,mBAAoB,GACpBC,sBAAuB,GACvBC,aAAc,GACdC,UAAW,GACXC,YAAa,GACbC,YAAa,GACbC,mBAAoB,GACpBC,mBAAoB,GACpBC,4BAA6B,GAC7BC,aAAa,GACbC,WAAW,GACXC,eAAgB,IC5CTC,G,MAAAA,YAAgB,CAC3BC,QCJW,WAAyC,IAA/BC,EAA8B,uDAAtBC,EAAcC,EAAQ,uCACnD,OAAQA,EAAOC,MAEX,IAAK,QACD,IAAMC,EAAMF,EAAOG,KAAKC,QAKxB,OAJAC,eAAeC,QAAQ,WAAYJ,EAAIK,UACxCF,eAAeC,QAAQ,QAAS,UAAYJ,EAAIM,OAC/CH,eAAeI,WAAW,WAC1BJ,eAAeI,WAAW,QACnB,2BACAX,GADP,IAEIU,MAAO,UAAYN,EAAIM,QAG/B,IAAK,gBACD,IAAME,EAAcV,EAAOG,KAAKC,QAMhC,OALAC,eAAeI,WAAW,YAC1BJ,eAAeI,WAAW,SAC1BJ,eAAeC,QAAQ,UAAWI,EAAYC,UAC9CN,eAAeC,QAAQ,OAAQI,EAAYE,MAEpC,2BACAd,GADP,IAEIe,eAAgBH,EAAYC,WAEpC,IAAK,eAED,OAAO,2BACAb,GADP,IAEInD,aAAcqD,EAAOG,KAAKC,UAElC,IAAK,iBAED,IAAIU,EAAUhB,EAAMnD,aAOpB,OALAqD,EAAOe,IAAIC,SAAQ,SAAAC,GACf,IAAIC,EAAeJ,EAAQK,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOA,KACnDH,EAAQO,OAAOH,EAAc,MAG1B,2BACApB,GADP,IAEInD,aAAa,YAAKmD,EAAMnD,gBAGhC,IAAK,iBAED,OAAO,2BACAmD,GADP,IAEIhD,eAAgBkD,EAAOG,KAAKC,UAGpC,IAAK,mBACD,IAAIkB,EAAiBxB,EAAMhD,eAM3B,OAJAkD,EAAOe,IAAIQ,KAAI,SAAAC,GACXF,EAAiBA,EAAeG,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAGlD,2BACA1B,GADP,IAEIhD,eAAe,YAAKwE,KAG5B,IAAK,oBACD,IAAII,EAAgB5B,EAAMhD,eAEtB6E,EAAiBD,EAAcP,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKC,QAAQa,MAM/E,OAJIU,GAAkB,GAClBD,EAAcL,OAAOM,EAAgB,GAGlC,2BACA7B,GADP,IAEIhD,eAAe,GAAD,mBAAMgD,EAAMhD,gBAAZ,CAA4BkD,EAAOG,KAAKC,YAM9D,IAAK,gBAED,OAAO,2BACAN,GADP,IAEI/C,cAAeiD,EAAOG,KAAKC,UAGnC,IAAK,kBACD,IAAIwB,EAAgB9B,EAAM/C,cAM1B,OAJAiD,EAAOe,IAAIQ,KAAI,SAAAC,GACXI,EAAgBA,EAAcH,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAGhD,2BACA1B,GADP,IAEI/C,cAAc,YAAK6E,KAG3B,IAAK,mBACD,IAAIC,EAAiB/B,EAAM/C,cAEvB+E,EAAkBD,EAAeV,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKC,QAAQa,MAMjF,OAJIa,GAAmB,GACnBD,EAAeR,OAAOS,EAAiB,GAGpC,2BACAhC,GADP,IAEI/C,cAAc,GAAD,mBAAM+C,EAAM/C,eAAZ,CAA2BiD,EAAOG,KAAKC,YAI5D,IAAK,aAED,OAAO,2BACAN,GADP,IAEIiC,WAAY/B,EAAOG,KAAKC,UAGhC,IAAK,eACD,IAAI4B,EAAalC,EAAMiC,WAMvB,OAJA/B,EAAOe,IAAIQ,KAAI,SAAAC,GACXQ,EAAaA,EAAWP,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAG1C,2BACA1B,GADP,IAEIkC,WAAW,YAAKA,KAGxB,IAAK,gBACD,IAAIC,EAAcnC,EAAMiC,WAEpBG,EAAeD,EAAYd,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKC,QAAQa,MAM3E,OAJIiB,GAAgB,GAChBD,EAAYZ,OAAOa,EAAc,GAG9B,2BACApC,GADP,IAEIiC,WAAW,GAAD,mBAAMjC,EAAMiC,YAAZ,CAAwB/B,EAAOG,KAAKC,YAGtD,IAAK,eAED,OAAO,2BACAN,GADP,IAEIqC,aAAcnC,EAAOG,KAAKC,UAGlC,IAAK,iBACD,IAAIgC,EAAetC,EAAMqC,aAMzB,OAJAnC,EAAOe,IAAIQ,KAAI,SAAAC,GACXY,EAAeA,EAAaX,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAG9C,2BACA1B,GADP,IAEIsC,aAAa,YAAKA,KAG1B,IAAK,kBACD,IAAIC,EAAgBvC,EAAMqC,aAEtBG,EAAiBD,EAAclB,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKC,QAAQa,MAM/E,OAJIqB,GAAkB,GAClBD,EAAchB,OAAOiB,EAAgB,GAGlC,2BACAxC,GADP,IAEIqC,aAAa,GAAD,mBAAMrC,EAAMqC,cAAZ,CAA0BnC,EAAOG,KAAKC,YAI1D,IAAK,iBAED,OAAO,2BACAN,GADP,IAEIyC,eAAgBvC,EAAOG,KAAKC,UAGpC,IAAK,mBACD,IAAIoC,EAAiB1C,EAAMyC,eAM3B,OAJAvC,EAAOe,IAAIQ,KAAI,SAAAC,GACXgB,EAAiBA,EAAef,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAGlD,2BACA1B,GADP,IAEI0C,eAAe,YAAKA,KAG5B,IAAK,oBACD,IAAIC,EAAkB3C,EAAMyC,eAExBG,EAAmBD,EAAgBtB,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKC,QAAQa,MAMnF,OAJIyB,GAAoB,GACpBA,EAAiBrB,OAAOqB,EAAkB,GAGvC,2BACA5C,GADP,IAEIyC,eAAe,GAAD,mBAAMzC,EAAMyC,gBAAZ,CAA4BvC,EAAOG,KAAKC,YAE9D,IAAK,cAOL,IAAK,qBAED,OAAO,2BACAN,GADP,IAEIH,eAAgBK,EAAOG,OAG/B,IAAK,qBACD,OAAO,2BACAL,GADP,IAEI6C,iBAAkB3C,EAAOG,OAGjC,IAAK,qBACD,IAAIyC,EAAmB9C,EAAM6C,iBAM7B,OAJA3C,EAAOe,IAAIQ,KAAI,SAAAC,GACXoB,EAAmBA,EAAiBnB,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAGtD,2BACA1B,GADP,IAEI6C,iBAAiB,YAAKC,KAG9B,IAAK,sBACD,IAAIC,EAAoB/C,EAAM6C,iBAE1BG,EAAoBD,EAAkB1B,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKC,QAAQa,MAMtF,OAJI6B,GAAqB,GACrBD,EAAkBxB,OAAOyB,EAAmB,GAGzC,2BACAhD,GADP,IAEI6C,iBAAiB,GAAD,mBAAM7C,EAAM6C,kBAAZ,CAA8B3C,EAAOG,KAAKC,YAGlE,IAAK,4BACD,IAAI2C,EAAkB,GAUtB,OARA/C,EAAOG,KAAKa,SAAQ,SAAAgC,GAChB,IAAIC,EAAU,CACVC,MAAOF,EAAK/B,GACZkC,MAAOH,EAAKpC,MAEhBmC,EAAgBK,KAAKH,MAGlB,2BACAnD,GADP,IAEIlC,oBAAqBmF,IAG7B,IAAK,wBACD,OAAO,2BACAjD,GADP,IAEInC,oBAAqBqC,EAAOG,OAGpC,IAAK,yBACD,IAAIkD,EAAuBvD,EAAMnC,oBAE7B2F,EAAuBD,EAAqBlC,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKc,MAMpF,OAJIqC,GAAwB,GACxBD,EAAqBhC,OAAOiC,EAAsB,GAG/C,2BACAxD,GADP,IAEInC,oBAAoB,GAAD,mBAAMmC,EAAMnC,qBAAZ,CAAiCqC,EAAOG,SAGnE,IAAK,wBACD,IAAIoD,EAAsBzD,EAAMnC,oBAMhC,OAJAqC,EAAOe,IAAIQ,KAAI,SAAAC,GACX+B,EAAsBA,EAAoB9B,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAG5D,2BACA1B,GADP,IAEInC,oBAAoB,YAAK4F,KAMjC,IAAK,+BACD,IAAIC,EAAqB,GAUzB,OATAxD,EAAOG,KAAKa,SAAQ,SAAAgC,GAChB,IAAIC,EAAU,CACVC,MAAOF,EAAK/B,GACZkC,MAAOH,EAAKS,cAGhBD,EAAmBJ,KAAKH,MAGrB,2BACAnD,GADP,IAEIhC,2BAA4B0F,IAGpC,IAAK,6BACD,OAAO,2BACA1D,GADP,IAEIjC,yBAA0BmC,EAAOG,OAGzC,IAAK,8BACD,IAAIuD,EAA4B5D,EAAMjC,yBAElC8F,EAA4BD,EAA0BvC,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKc,MAM9F,OAJI0C,GAA6B,GAC7BD,EAA0BrC,OAAOsC,EAA2B,GAGzD,2BACA7D,GADP,IAEIjC,yBAAyB,GAAD,mBAAMiC,EAAMjC,0BAAZ,CAAsCmC,EAAOG,SAG7E,IAAK,6BACD,IAAIyD,EAA2B9D,EAAMjC,yBAMrC,OAJAmC,EAAOe,IAAIQ,KAAI,SAAAC,GACXoC,EAA2BA,EAAyBnC,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAGtE,2BACA1B,GADP,IAEIjC,yBAAyB,YAAK+F,KAKtC,IAAK,oCACD,IAAIC,EAA0B,GAU9B,OATA7D,EAAOG,KAAKa,SAAQ,SAAAgC,GAChB,IAAIC,EAAU,CACVC,MAAOF,EAAK/B,GACZkC,MAAOH,EAAKc,mBAGhBD,EAAwBT,KAAKH,MAG1B,2BACAnD,GADP,IAEI/B,gCAAiC8F,IAGzC,IAAK,cACD,OAAO,2BACA/D,GADP,IAEI9B,YAAagC,EAAOG,OAG5B,IAAK,iBACD,IAAI4D,EAAejE,EAAM9B,YAErBgG,EAAeD,EAAa5C,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKc,MAMpE,OAJI+C,GAAgB,GAChBD,EAAa1C,OAAO2C,EAAc,GAG/B,2BACAlE,GADP,IAEI9B,YAAY,GAAD,mBAAM8B,EAAM9B,aAAZ,CAAyBgC,EAAOG,SAGnD,IAAK,gBACD,IAAInC,EAAc8B,EAAM9B,YAMxB,OAJAgC,EAAOe,IAAIQ,KAAI,SAAAC,GACXxD,EAAcA,EAAYyD,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAG5C,2BACA1B,GADP,IAEI9B,YAAY,YAAKA,KAIzB,IAAK,eACD,OAAO,2BACA8B,GADP,IAEI7B,WAAY+B,EAAOG,OAG3B,IAAK,gBACD,IAAI8D,EAAcnE,EAAM7B,WAEpBiG,EAAcD,EAAY9C,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKc,MAMlE,OAJIiD,GAAe,GACfD,EAAY5C,OAAO6C,EAAa,GAG7B,2BACApE,GADP,IAEI7B,WAAW,GAAD,mBAAM6B,EAAM7B,YAAZ,CAAwB+B,EAAOG,SAGjD,IAAK,eACD,IAAIgE,EAAarE,EAAM7B,WAMvB,OAJA+B,EAAOe,IAAIQ,KAAI,SAAAC,GACX2C,EAAaA,EAAW1C,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAG1C,2BACA1B,GADP,IAEI7B,WAAW,YAAKkG,KAKxB,IAAK,uBACD,OAAO,2BACArE,GADP,IAEI5B,mBAAoB8B,EAAOG,OAGnC,IAAK,wBACD,IAAIiE,EAAsBtE,EAAM5B,mBAE5BmG,EAAsBD,EAAoBjD,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKc,MAMlF,OAJIoD,GAAuB,GACvBD,EAAoB/C,OAAOgD,EAAqB,GAG7C,2BACAvE,GADP,IAEI5B,mBAAmB,GAAD,mBAAM4B,EAAM5B,oBAAZ,CAAgC8B,EAAOG,SAGjE,IAAK,uBACD,IAAImE,EAAqBxE,EAAM5B,mBAM/B,OAJA8B,EAAOe,IAAIQ,KAAI,SAAAC,GACX8C,EAAqBA,EAAmB7C,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAG1D,2BACA1B,GADP,IAEI5B,mBAAmB,YAAKoG,KAIhC,IAAK,oBACD,OAAO,2BACAxE,GADP,IAEI3B,gBAAiB6B,EAAOG,OAGhC,IAAK,qBACD,IAAIoE,EAAmBzE,EAAM3B,gBAEzBqG,EAAmBD,EAAiBpD,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKc,MAM5E,OAJIuD,GAAoB,GACpBD,EAAiBlD,OAAOmD,EAAkB,GAGvC,2BACA1E,GADP,IAEI3B,gBAAgB,GAAD,mBAAM2B,EAAM3B,iBAAZ,CAA6B6B,EAAOG,SAG3D,IAAK,oBACD,IAAIsE,EAAkB3E,EAAM3B,gBAM5B,OAJA6B,EAAOe,IAAIQ,KAAI,SAAAC,GACXiD,EAAkBA,EAAgBhD,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAGpD,2BACA1B,GADP,IAEI3B,gBAAgB,YAAKsG,KAI7B,IAAK,8BACD,OAAO,2BACA3E,GADP,IAEI1B,0BAA2B4B,EAAOG,OAG1C,IAAK,+BACD,IAAIuE,EAA6B5E,EAAM1B,0BAEnCuG,EAA6BD,EAA2BvD,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKc,MAMhG,OAJI0D,GAA8B,GAC9BD,EAA2BrD,OAAOsD,EAA4B,GAG3D,2BACA7E,GADP,IAEI1B,0BAA0B,GAAD,mBAAM0B,EAAM1B,2BAAZ,CAAuC4B,EAAOG,SAG/E,IAAK,8BACD,IAAIyE,EAA4B9E,EAAM1B,0BAMtC,OAJA4B,EAAOe,IAAIQ,KAAI,SAAAC,GACXoD,EAA4BA,EAA0BnD,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAGxE,2BACA1B,GADP,IAEI1B,0BAA0B,YAAKwG,KAIvC,IAAK,qCACD,IAAIC,EAAc,GAUlB,OATA7E,EAAOG,KAAKa,SAAQ,SAAAgC,GAChB,IAAIC,EAAU,CACVC,MAAOF,EAAK/B,GACZkC,MAAOH,EAAK8B,aAGhBD,EAAYzB,KAAKH,MAGd,2BACAnD,GADP,IAEIzB,iCAAkCwG,IAI1C,IAAK,iBACD,OAAO,2BACA/E,GADP,IAEIlD,aAAcoD,EAAOG,OAG7B,IAAK,kBACD,IAAI4E,EAAgBjF,EAAMlD,aAEtBoI,EAAgBD,EAAc5D,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKc,MAMtE,OAJI+D,GAAiB,GACjBD,EAAc1D,OAAO2D,EAAe,GAGjC,2BACAlF,GADP,IAEIlD,aAAa,GAAD,mBAAMkD,EAAMlD,cAAZ,CAA0BoD,EAAOG,SAGrD,IAAK,iBACD,IAAI8E,EAAenF,EAAMlD,aAMzB,OAJAoD,EAAOe,IAAIQ,KAAI,SAAAC,GACXyD,EAAeA,EAAaxD,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAG9C,2BACA1B,GADP,IAEIlD,aAAa,YAAKqI,KAI1B,IAAK,iBACD,IAAIC,GAAiB,GAUrB,OATAlF,EAAOG,KAAKa,SAAQ,SAAAgC,GAChB,IAAIC,EAAU,CACVC,MAAOF,EAAK/B,GACZkC,MAAOH,EAAKmC,aAGhBD,GAAe9B,KAAKH,MAGjB,2BACAnD,GADP,IAEItB,uBAAwB0G,KAGhC,IAAK,gBACD,IAAIE,GAAkB,GAUtB,OATApF,EAAOG,KAAKa,SAAQ,SAAAgC,GAChB,IAAIC,EAAU,CACVC,MAAOF,EAAK/B,GACZkC,MAAOH,EAAKqC,WAGhBD,GAAgBhC,KAAKH,MAGlB,2BACAnD,GADP,IAEIvB,wBAAyB6G,KAGjC,IAAK,kBACD,IAAIE,GAAqB,GAUzB,OATAtF,EAAOG,KAAKa,SAAQ,SAAAgC,GAChB,IAAIC,EAAU,CACVC,MAAOF,EAAK/B,GACZkC,MAAOH,EAAKS,cAGhB6B,GAAmBlC,KAAKH,MAGrB,2BACAnD,GADP,IAEIxB,2BAA4BgH,KAGpC,IAAK,gBACD,OAAO,2BACAxF,GADP,IAEIjD,aAAcmD,EAAOG,OAG7B,IAAK,iBACD,IAAIoF,GAAgBzF,EAAMjD,aAEtB2I,GAAgBD,GAAcpE,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKc,MAMtE,OAJIuE,IAAiB,GACjBD,GAAclE,OAAOmE,GAAe,GAGjC,2BACA1F,GADP,IAEIjD,aAAa,GAAD,mBAAMiD,EAAMjD,cAAZ,CAA0BmD,EAAOG,SAGrD,IAAK,gBACD,IAAIsF,GAAe3F,EAAMjD,aAMzB,OAJAmD,EAAOe,IAAIQ,KAAI,SAAAC,GACXiE,GAAeA,GAAahE,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAG9C,2BACA1B,GADP,IAEIjD,aAAa,YAAK4I,MAG1B,IAAK,iBACD,IAAIC,GAAoB,GAUxB,OATA1F,EAAOG,KAAKa,SAAQ,SAAAgC,GAChB,IAAIC,EAAU,CACVC,MAAOF,EAAK/B,GACZkC,MAAOH,EAAKpC,MAGhB8E,GAAkBtC,KAAKH,MAGpB,2BACAnD,GADP,IAEIjB,0BAA2B6G,KAInC,IAAK,oBACD,OAAO,2BACA5F,GADP,IAEIhB,gBAAiBkB,EAAOG,OAGhC,IAAK,qBACD,IAAIwF,GAAmB7F,EAAMhB,gBAEzB8G,GAAmBD,GAAiBxE,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKc,MAM5E,OAJI2E,IAAoB,GACpBD,GAAiBtE,OAAOuE,GAAkB,GAGvC,2BACA9F,GADP,IAEIhB,gBAAgB,GAAD,mBAAMgB,EAAMhB,iBAAZ,CAA6BkB,EAAOG,SAG3D,IAAK,oBACD,IAAI0F,GAAkB/F,EAAMhB,gBAM5B,OAJAkB,EAAOe,IAAIQ,KAAI,SAAAC,GACXqE,GAAkBA,GAAgBpE,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAGpD,2BACA1B,GADP,IAEIhB,gBAAgB,YAAK+G,MAI7B,IAAK,wBACD,IAAIC,GAAiB,GAUrB,OATA9F,EAAOG,KAAKa,SAAQ,SAAAgC,GAChB,IAAIC,EAAU,CACVC,MAAOF,EAAK/B,GACZkC,MAAOH,EAAKpC,MAGhBkF,GAAe1C,KAAKH,MAGjB,2BACAnD,GADP,IAEIf,uBAAwB+G,KAGhC,IAAK,oBACD,IAAIC,GAAa,GAUjB,OATA/F,EAAOG,KAAKa,SAAQ,SAAAgC,GAChB,IAAIC,EAAU,CACVC,MAAOF,EAAK/B,GACZkC,MAAOH,EAAKmC,aAGhBY,GAAW3C,KAAKH,MAGb,2BACAnD,GADP,IAEId,mBAAoB+G,KAK5B,IAAK,oBACD,IAAIC,GAAyBlG,EAAMb,sBAE/BgH,GAAyBD,GAAuB7E,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKc,MAMxF,OAJIgF,IAA0B,GAC1BD,GAAuB3E,OAAO4E,GAAwB,GAGnD,2BACAnG,GADP,IAEIb,sBAAsB,GAAD,mBAAMa,EAAMb,uBAAZ,CAAmCe,EAAOG,SAGvE,IAAK,mBACD,IAAI+F,GAAwBpG,EAAMb,sBAMlC,OAJAe,EAAOe,IAAIQ,KAAI,SAAAC,GACX0E,GAAwBA,GAAsBzE,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAGhE,2BACA1B,GADP,IAEIb,sBAAsB,YAAKiH,MAGnC,IAAK,mBACD,OAAO,2BACApG,GADP,IAEIb,sBAAuBe,EAAOG,OAGtC,IAAK,8BACD,OAAO,2BACAL,GADP,IAEIqG,4BAA6BnG,EAAOG,OAG5C,IAAK,0BACD,IAAIiG,GAAqB,GAUzB,OATApG,EAAOG,KAAKa,SAAQ,SAAAgC,GAChB,IAAIC,EAAU,CACVC,MAAOF,EAAK/B,GACZkC,MAAOH,EAAK8B,aAGhBsB,GAAmBhD,KAAKH,MAGrB,2BACAnD,GADP,IAEIjB,0BAA2BuH,KAKnC,IAAK,kBACD,IAAIC,GAAgBvG,EAAMZ,aAEtBoH,GAAgBD,GAAclF,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKc,MAMtE,OAJIqF,IAAiB,GACjBD,GAAchF,OAAOiF,GAAe,GAGjC,2BACAxG,GADP,IAEIZ,aAAa,GAAD,mBAAMY,EAAMZ,cAAZ,CAA0Bc,EAAOG,SAGrD,IAAK,iBACD,IAAIoG,GAAezG,EAAMZ,aAMzB,OAJAc,EAAOe,IAAIQ,KAAI,SAAAC,GACX+E,GAAeA,GAAa9E,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAG9C,2BACA1B,GADP,IAEIZ,aAAa,YAAKqH,MAG1B,IAAK,iBACD,OAAO,2BACAzG,GADP,IAEIZ,aAAcc,EAAOG,OAM7B,IAAK,qBACD,IAAIqG,GAA+B1G,EAAMN,4BAErCiH,GAA+BD,GAA6BrF,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKc,MAMpG,OAJIwF,IAAgC,GAChCD,GAA6BnF,OAAOoF,GAA8B,GAG/D,2BACA3G,GADP,IAEIN,4BAA4B,GAAD,mBAAMM,EAAMN,6BAAZ,CAAyCQ,EAAOG,SAGnF,IAAK,oBACD,IAAIuG,GAA8B5G,EAAMN,4BAMxC,OAJAQ,EAAOe,IAAIQ,KAAI,SAAAC,GACXkF,GAA8BA,GAA4BjF,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAG5E,2BACA1B,GADP,IAEIN,4BAA4B,YAAKkH,MAGzC,IAAK,oBACD,OAAO,2BACA5G,GADP,IAEIN,4BAA6BQ,EAAOG,OAG5C,IAAK,gBAKL,QACI,OAAO,eACAL,GAGX,IAAK,eACD,OAAO,2BACAA,GADP,IAEI1C,YAAa4C,EAAOG,KAAKC,UAIjC,IAAK,eAED,OAAO,2BACAN,GADP,IAEI5C,aAAc8C,EAAOG,KAAKC,UAElC,IAAK,gBAED,OAAO,2BACAN,GADP,IAEI6G,cAAe3G,EAAOG,OAE9B,IAAK,iBACD,IAAIjD,GAAe4C,EAAM5C,aAMzB,OAJA8C,EAAOe,IAAIQ,KAAI,SAAAC,GACXtE,GAAeA,GAAauE,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAG9C,2BACA1B,GADP,IAEI5C,aAAa,YAAKA,MAG1B,IAAK,kBACD,IAAI0J,GAAgB9G,EAAM5C,aAEtB2J,GAAiBD,GAAczF,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKC,QAAQa,MAM/E,OAJI4F,IAAkB,GAClBD,GAAcvF,OAAOwF,GAAgB,GAGlC,2BACA/G,GADP,IAEI5C,aAAa,GAAD,mBAAM4C,EAAM5C,cAAZ,CAA0B8C,EAAOG,KAAKC,YAE1D,IAAK,sBACD,IAAI0G,GAAe,GAUnB,OATA9G,EAAOG,KAAKa,SAAQ,SAAAgC,GAChB,IAAI+D,EAAc,CACd7D,MAAOF,EAAK/B,GACZkC,MAAOH,EAAKpC,MAGhBkG,GAAa1D,KAAK2D,MAGf,2BACAjH,GADP,IAEInB,oBAAqBmI,KAG7B,IAAK,YACD,OAAO,2BACAhH,GADP,IAEIX,UAAWa,EAAOG,KAAKC,UAG/B,IAAK,cACD,IAAIjB,GAAYW,EAAMX,UAMtB,OAJAa,EAAOe,IAAIQ,KAAI,SAAAC,GACXrC,GAAYA,GAAUsC,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAGxC,2BACA1B,GADP,IAEIX,UAAU,YAAKA,MAGvB,IAAK,YAED,OAAO,2BACAW,GADP,IAEI3C,UAAW6C,EAAOG,KAAKC,UAG/B,IAAK,cACD,IAAIjD,GAAY2C,EAAM3C,UAMtB,OAJA6C,EAAOe,IAAIQ,KAAI,SAAAC,GACXrE,GAAYA,GAAUsE,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAGxC,2BACA1B,GADP,IAEI3C,UAAU,YAAKA,MAGvB,IAAK,eACD,IAAI6J,GAAalH,EAAM3C,UAEnB8J,GAAcD,GAAW7F,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKC,QAAQa,MAMzE,OAJIgG,IAAe,GACfD,GAAW3F,OAAO2F,GAAY,GAG3B,2BACAlH,GADP,IAEI3C,UAAU,GAAD,mBAAM2C,EAAM3C,WAAZ,CAAuB6C,EAAOG,KAAKC,YAEpD,IAAK,mBACD,IAAI8G,GAAY,GAUhB,OATAlH,EAAOG,KAAKa,SAAQ,SAAAgC,GAChB,IAAImE,EAAW,CACXjE,MAAOF,EAAK/B,GACZkC,MAAOH,EAAKoE,WAGhBF,GAAU9D,KAAK+D,MAGZ,2BACArH,GADP,IAEIlB,iBAAkBsI,KAI1B,IAAK,cAED,OAAO,2BACApH,GADP,IAEIT,YAAaW,EAAOG,KAAKC,UAGjC,IAAK,kBACD,IAAIiH,GAAc,GAUlB,OATArH,EAAOG,KAAKa,SAAQ,SAAAgC,GAChB,IAAIsE,EAAa,CACbpE,MAAOF,EAAK/B,GACZkC,MAAOH,EAAKuE,UAGhBF,GAAYjE,KAAKkE,MAGd,2BACAxH,GADP,IAEIP,mBAAoB8H,KAG5B,IAAK,gBACD,IAAIhI,GAAcS,EAAMT,YAKxB,OAHAW,EAAOe,IAAIQ,KAAI,SAAAC,GACXnC,GAAcA,GAAYoC,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAE5C,2BACA1B,GADP,IAEIT,YAAY,YAAKA,MAGzB,IAAK,iBACD,IAAImI,GAAe1H,EAAMT,YAErBoI,GAAgBD,GAAarG,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKC,QAAQa,MAM7E,OAJIwG,IAAiB,GACjBD,GAAanG,OAAOmG,GAAc,GAG/B,2BACA1H,GADP,IAEIT,YAAY,GAAD,mBAAMS,EAAMT,aAAZ,CAAyBW,EAAOG,KAAKC,YAEpD,IAAK,cAED,OAAO,2BACAN,GADP,IAEIT,YAAaW,EAAOG,KAAKC,UAGjC,IAAK,eACD,OAAO,2BACAN,GADP,IAEIL,aAAcO,EAAOG,KAAKC,UAGlC,IAAK,iBACD,IAAIX,GAAeK,EAAML,aAKzB,OAHAO,EAAOe,IAAIQ,KAAI,SAAAC,GACX/B,GAAeA,GAAagC,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAE9C,2BACA1B,GADP,IAEIL,aAAa,YAAKA,MAG1B,IAAK,kBACD,IAAIiI,GAAgB5H,EAAML,aAEtBkI,GAAYD,GAAcvG,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKC,QAAQa,MAM1E,OAJI0G,IAAa,GACbD,GAAcrG,OAAOqG,GAAe,GAGjC,2BACA5H,GADP,IAEIL,aAAa,GAAD,mBAAMK,EAAML,cAAZ,CAA0BO,EAAOG,KAAKC,YAGtD,IAAK,aACD,IAAIwH,GAAW,GAUf,OATA5H,EAAOG,KAAKa,SAAQ,SAAAgC,GAChB,IAAI6E,EAAU,CACV3E,MAAOF,EAAK/B,GACZkC,MAAOH,EAAKpC,MAGhBgH,GAASxE,KAAKyE,MAGX,2BACA/H,GADP,IAEIJ,WAAYkI,KAG5B,IAAK,eAED,OAAO,2BACA9H,GADP,IAEI9C,aAAcgD,EAAOG,KAAKC,UAGlC,IAAK,iBACD,IAAIpD,GAAe8C,EAAM9C,aAMzB,OAJAgD,EAAOe,IAAIQ,KAAI,SAAAC,GACXxE,GAAeA,GAAayE,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAG9C,2BACA1B,GADP,IAEI9C,aAAa,YAAKA,MAG1B,IAAK,kBACD,IAAI8K,GAAgBhI,EAAM9C,aAEtB+K,GAAiBD,GAAc3G,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKC,QAAQa,MAM/E,OAJI8G,IAAkB,GAClBD,GAAczG,OAAO0G,GAAgB,GAGlC,2BACAjI,GADP,IAEI9C,aAAa,GAAD,mBAAM8C,EAAM9C,cAAZ,CAA0BgD,EAAOG,KAAKC,YAE1D,IAAK,sBACD,IAAI4H,GAAe,GAUnB,OATAhI,EAAOG,KAAKa,SAAQ,SAAAgC,GAChB,IAAIiF,EAAc,CACd/E,MAAOF,EAAK/B,GACZkC,MAAOH,EAAKkF,cAGhBF,GAAa5E,KAAK6E,MAGf,2BACAnI,GADP,IAEIrB,oBAAqBuJ,KAI7B,IAAK,WAED,OAAO,2BACAlI,GADP,IAEIzC,SAAU2C,EAAOG,KAAKC,UAG9B,IAAK,aACD,IAAI/C,GAAWyC,EAAMzC,SAMrB,OAJA2C,EAAOe,IAAIQ,KAAI,SAAAC,GACXnE,GAAWA,GAASoE,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAGtC,2BACA1B,GADP,IAEIzC,SAAS,YAAKA,MAGtB,IAAK,cACD,IAAI8K,GAAYrI,EAAMzC,SAElB+K,GAAiBD,GAAUhH,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKC,QAAQa,MAM3E,OAJImH,IAAkB,GAClBD,GAAU9G,OAAO+G,GAAgB,GAG9B,2BACAtI,GADP,IAEIzC,SAAS,GAAD,mBAAMyC,EAAMzC,UAAZ,CAAsB2C,EAAOG,KAAKC,YAElD,IAAK,eACD,IAAIiI,GAAW,GASf,OARArI,EAAOG,KAAKa,SAAQ,SAAAgC,GAChB,IAAIsF,EAAU,CACVpF,MAAOF,EAAK/B,GACZkC,MAAOH,EAAKuE,UAEhBc,GAASjF,KAAKkF,MAGX,2BACAxI,GADP,IAEIyI,gBAAiBF,KAGzB,IAAK,qBACD,IAAIG,GAAc,GASlB,OARAxI,EAAOG,KAAKa,SAAQ,SAAAgC,GAChB,IAAIyF,EAAa,CACbvF,MAAOF,EAAK/B,GACZkC,MAAOH,EAAK0F,mBAEhBF,GAAYpF,KAAKqF,MAGd,2BACA3I,GADP,IAEIR,mBAAoBkJ,KAG5B,IAAK,eAED,OAAO,2BACA1I,GADP,IAEI7C,aAAc+C,EAAOG,KAAKC,UAGlC,IAAK,mBACD,IAAInD,GAAe6C,EAAM7C,aAMzB,OAJA+C,EAAOe,IAAIQ,KAAI,SAAAC,GACXvE,GAAeA,GAAawE,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAG9C,2BACA1B,GADP,IAEI7C,aAAa,YAAKA,MAG1B,IAAK,kBACD,IAAI0L,GAAgB7I,EAAM7C,aAEtB2L,GAAiBD,GAAcxH,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKC,QAAQa,MAM/E,OAJI2H,IAAkB,GAClBD,GAActH,OAAOsH,GAAe,GAGjC,2BACA7I,GADP,IAEI7C,aAAa,GAAD,mBAAM6C,EAAM7C,cAAZ,CAA0B+C,EAAOG,KAAKC,YAE1D,IAAK,sBACD,IAAIyI,GAAe,GAUnB,OATA7I,EAAOG,KAAKa,SAAQ,SAAAgC,GAChB,IAAI8F,EAAc,CACd5F,MAAOF,EAAK/B,GACZkC,MAAOH,EAAK+F,cAGhBF,GAAazF,KAAK0F,MAGf,2BACAhJ,GADP,IAEIpB,oBAAqBmK,KAG7B,IAAK,eAED,OAAO,2BACA/I,GADP,IAEIvC,aAAcyC,EAAOG,KAAKC,UAGlC,IAAK,iBACD,IAAI7C,GAAeuC,EAAMvC,aAMzB,OAJAyC,EAAOe,IAAIQ,KAAI,SAAAC,GACXjE,GAAeA,GAAakE,QAAO,SAAAL,GAAC,OAAIA,EAAEH,KAAOO,QAG9C,2BACA1B,GADP,IAEIvC,aAAa,YAAKA,MAG1B,IAAK,kBACD,IAAIyL,GAAgBlJ,EAAMvC,aAEtB0L,GAAkBD,GAAc7H,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKC,QAAQa,MAMhF,OAJIgI,IAAmB,GACnBD,GAAc3H,OAAO4H,GAAiB,GAGnC,2BACAnJ,GADP,IAEIvC,aAAa,GAAD,mBAAMuC,EAAMvC,cAAZ,CAA0ByC,EAAOG,KAAKC,YAG1D,IAAK,aACD,IAAI8I,GAAsBpJ,EAAMT,YAE5B8J,GAAeD,GAAoB/H,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKC,QAAQa,MAMnF,OAJIkI,IAAgB,GAChBD,GAAoB7H,OAAO8H,GAAc,GAGtC,2BACArJ,GADP,IAEIoJ,oBAAoB,GAAD,mBAAMpJ,EAAMT,aAAZ,CAAyBW,EAAOG,KAAKC,YAGhE,IAAK,aACD,IAAIgJ,GAAyBtJ,EAAMT,YAE/BgK,GAAkBD,GAAuBjI,WAAU,SAAAC,GAAC,OAAIA,EAAEH,KAAOjB,EAAOG,KAAKC,QAAQa,MAMzF,OAJIoI,IAAmB,GACnBD,GAAuB/H,OAAO8H,GAAc,GAGzC,2BACArJ,GADP,IAEIsJ,uBAAuB,GAAD,mBAAMtJ,EAAMT,aAAZ,CAAyBW,EAAOG,KAAKC,iBCjzC5D,OAAEkJ,OALjB,WAEI,OADcC,YAAYC,EAAUC,YAAgBC,Q,eCsBzCC,EAxBK,SAACC,GAAW,IAAD,EACrBC,GAAK,GACPC,SAAU,WACVC,KAAM,MACNC,IAAK,MACLC,OAAQ,EACRC,MAAO,QACPC,OAAQ,QACRC,OAAQ,kBACRC,OAAQ,qBACRC,aAAc,MACdC,UAAW,sBAVJ,sBAWA,SAXA,uBAYC,SAZD,0BAcI,2BAdJ,GAgBX,OACI,kBAAC,WAAD,KACI,yBAAKV,MAAOA,MCjBlBW,EAASC,gBAAK,kBAAM,wDAGpBC,EAAYD,gBAAK,kBAAM,+DAGvBE,EAAWF,gBAAK,kBAAM,6EACtBG,EAAWH,gBAAK,kBAAM,6EACtBI,EAAgBJ,gBAAK,kBAAM,6EAC3BK,EAAuBL,gBAAK,kBAAM,6EAClCM,EAAQN,gBAAK,kBAAM,6EACnBO,EAAYP,gBAAK,kBAAM,6EACvBQ,EAAYR,gBAAK,kBAAM,6EACvBS,EAAST,gBAAK,kBAAM,6EACpBU,EAASV,gBAAK,kBAAM,6EACpBW,EAAWX,gBAAK,kBAAM,6EACtBY,EAAiBZ,gBAAK,kBAAM,6EAC5Ba,EAAWb,gBAAK,kBAAM,6EACtBc,EAAcd,gBAAK,kBAAM,6EACzBe,EAAef,gBAAK,kBAAM,6EAC1BgB,EAAkBhB,gBAAK,kBAAM,6EAC7BiB,EAAejB,gBAAK,kBAAM,6EAC1BkB,EAAclB,gBAAK,kBAAM,4EACzBmB,EAAenB,gBAAK,kBAAM,sCAC1BoB,EAASpB,gBAAK,kBAAM,6EACpBqB,EAAiBrB,gBAAK,kBAAM,6EAC5BsB,EAActB,gBAAK,kBAAM,6EACzBuB,EAAcvB,gBAAK,kBAAM,6EACzBwB,EAAWxB,gBAAK,kBAAM,6EACtByB,EAAgBzB,gBAAK,kBAAM,4EAC3B0B,EAAoB1B,gBAAK,kBAAM,6EAC/B2B,EAA6B3B,gBAAK,kBAAM,6EACxC4B,EAAW5B,gBAAK,kBAAM,6EACtB6B,EAAwB7B,gBAAK,kBAAM,6EACnC8B,EAAuB9B,gBAAK,kBAAM,6EAClC+B,GAAW/B,gBAAK,kBAAM,6EACtBgC,GAAQhC,gBAAK,kBAAM,6EACnBiC,GAAWjC,gBAAK,kBAAM,6EACtBkC,GAAWlC,gBAAK,kBAAM,6EACtBmC,GAAOnC,gBAAK,kBAAM,4EAClBoC,GAAWpC,gBAAK,kBAAM,6EACtBqC,GAAWrC,gBAAK,kBAAM,6EACtBsC,GAAetC,gBAAK,kBAAM,6EAC1BuC,GAAwBvC,gBAAK,kBAAM,6EACnCwC,GAAQxC,gBAAK,kBAAM,6EA4DVyC,GAzDQ,WACnB,OACI,kBAAC,WAAD,CAAUC,SAAU,kBAAC,EAAD,OAChB,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAWtC,IAEhC,kBAACP,EAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO4C,KAAK,oBAAoBC,UAAW3C,IAE3C,kBAAC,IAAD,CAAO0C,KAAK,mBAAmBC,UAAW1C,IAC1C,kBAAC,IAAD,CAAOyC,KAAK,oBAAoBC,UAAWrC,IAC3C,kBAAC,IAAD,CAAOoC,KAAK,oBAAoBC,UAAWpC,IAC3C,kBAAC,IAAD,CAAOmC,KAAK,mBAAmBC,UAAWjC,IAC1C,kBAAC,IAAD,CAAOgC,KAAK,yBAAyBC,UAAWhC,IAChD,kBAAC,IAAD,CAAO+B,KAAK,gCAAgCC,UAAWL,KACvD,kBAAC,IAAD,CAAOI,KAAK,iBAAiBC,UAAWnC,IACxC,kBAAC,IAAD,CAAOkC,KAAK,sBAAsBC,UAAW9B,IAC7C,kBAAC,IAAD,CAAO6B,KAAK,mBAAmBC,UAAWzC,IAC1C,kBAAC,IAAD,CAAOwC,KAAK,wBAAwBC,UAAWxC,IAC/C,kBAAC,IAAD,CAAOuC,KAAK,uBAAuBC,UAAW7B,IAC9C,kBAAC,IAAD,CAAO4B,KAAK,0BAA0BC,UAAW5B,IACjD,kBAAC,IAAD,CAAO2B,KAAK,wBAAwBC,UAAWnB,IAC/C,kBAAC,IAAD,CAAOkB,KAAK,uBAAuBC,UAAW3B,IAC9C,kBAAC,IAAD,CAAO0B,KAAK,sBAAsBC,UAAW1B,IAC7C,kBAAC,IAAD,CAAOyB,KAAK,uBAAuBC,UAAWzB,IAC9C,kBAAC,IAAD,CAAOwB,KAAK,iBAAiBC,UAAWxB,IACxC,kBAAC,IAAD,CAAOuB,KAAK,sBAAsBC,UAAWtB,IAC7C,kBAAC,IAAD,CAAOqB,KAAK,yBAAyBC,UAAWvB,IAChD,kBAAC,IAAD,CAAOsB,KAAK,sBAAsBC,UAAWrB,IAC7C,kBAAC,IAAD,CAAOoB,KAAK,mBAAmBC,UAAWpB,IAC1C,kBAAC,IAAD,CAAOmB,KAAK,mBAAmBC,UAAWhB,IAC1C,kBAAC,IAAD,CAAOe,KAAK,qCAAqCC,UAAWjB,IAC5D,kBAAC,IAAD,CAAOgB,KAAK,4BAA4BC,UAAWlB,IACnD,kBAAC,IAAD,CAAOiB,KAAK,gCAAgCC,UAAWf,IACvD,kBAAC,IAAD,CAAOc,KAAK,+BAA+BC,UAAWd,IACtD,kBAAC,IAAD,CAAOa,KAAK,mCAAmCC,UAAWvC,IAC1D,kBAAC,IAAD,CAAOsC,KAAK,mBAAmBC,UAAWb,KAC1C,kBAAC,IAAD,CAAOY,KAAK,gBAAgBC,UAAWZ,KACvC,kBAAC,IAAD,CAAOW,KAAK,mBAAmBC,UAAWX,KAC1C,kBAAC,IAAD,CAAOU,KAAK,eAAeC,UAAWT,KACtC,kBAAC,IAAD,CAAOQ,KAAK,mBAAmBC,UAAW/B,IAC1C,kBAAC,IAAD,CAAO8B,KAAK,mBAAmBC,UAAWR,KAC1C,kBAAC,IAAD,CAAOO,KAAK,uBAAuBC,UAAWN,KAC9C,kBAAC,IAAD,CAAOK,KAAK,mBAAmBC,UAAWP,KAC1C,kBAAC,IAAD,CAAOM,KAAK,mBAAmBC,UAAWV,KAC1C,kBAAC,IAAD,CAAOS,KAAK,iBAAiBC,UAAWlC,IACxC,kBAAC,IAAD,CAAOiC,KAAK,gBAAgBC,UAAWJ,WCzF7DK,I,MAAQ/D,EAAYD,UA+BXiE,G,kDA5BX,WAAY3D,GAAQ,IAAD,6BACf,cAAMA,GAIK,KAFD4D,OAAOC,SAASC,WAGtBF,OAAOC,SAASE,KAAO,iBAI3B,EAAK7N,MAAQ,CACT8N,SAAS,EACTC,WAAW,GAZA,E,qDAmBf,OACI,kBAAC,IAAD,CAAUP,MAAOA,IACb,kBAAC,GAAD,W,GAtBEQ,aCHZC,GAAcC,QACW,cAA7BR,OAAOC,SAASQ,UAEa,UAA7BT,OAAOC,SAASQ,UAEhBT,OAAOC,SAASQ,SAASC,MACvB,2DA6BJ,SAASC,GAAiBC,GACxBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB7O,QACfuO,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,MC/DjE,IAAMC,GAAUC,SAASC,qBAAqB,QAAQ,GAAGC,aAAa,QAChEC,GAAcH,SAASI,eAAe,QAE5CC,IAASC,OACP,kBAAC,IAAD,CAAeC,SAAUR,IACvB,kBAAC,GAAD,OAEFI,IDMa,WACb,GAA6C,kBAAmBlB,UAAW,CAGzE,GADkB,IAAIuB,IAAIC,GAAwBrC,OAAOC,UAC3CqC,SAAWtC,OAAOC,SAASqC,OAIvC,OAGFtC,OAAOuC,iBAAiB,QAAQ,WAC9B,IAAM3B,EAAK,UAAMyB,GAAN,sBAEP9B,GAwCV,SAAkCK,GAEhC4B,MAAM5B,GACHI,MAAK,SAAAyB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7ChC,UAAUC,cAAcgC,MAAM9B,MAAK,SAAAC,GACjCA,EAAa8B,aAAa/B,MAAK,WAC7BhB,OAAOC,SAAS+C,eAKpBrC,GAAgBC,MAGnBa,OAAM,WACLF,QAAQC,IACN,oEA5DAyB,CAAwBrC,GAGxBD,GAAgBC,OCvBxBsC,K","file":"static/js/main.f00c1020.chunk.js","sourcesContent":["export default\r\n    {\r\n        ListAccounts: [],\r\n        listCategory: [],\r\n        listProducts: [],\r\n        ListDataSheets: [],\r\n        ListCatalogue: [],\r\n        ListItemType: [],\r\n        ListCurrency: [],\r\n        ListSupplier: [],\r\n        ListStore: [],\r\n        ListMessage: [],\r\n        ListBank: [],\r\n        ListBankForDropDown: [],\r\n        ListPurchase: [],\r\n        LISTFACTOR: [],\r\n        LISTPRICELST: [],\r\n        LISTCLIENTCOMM: [],\r\n        ListCategoryGallery: [],\r\n        listCategoryForDrop: [],\r\n        ListCategoryChildGallery: [],\r\n        listCategoryGalleryForDrop: [],\r\n        listCategoryChildGalleryForDrop: [],\r\n        listGallery: [],\r\n        ListColors: [],\r\n        ListParentCategory: [],\r\n        ListProductName: [],\r\n        ListParentProductCategory: [],\r\n        ListParentProductCategoryForDrop: [],\r\n        ListProductCategoryForDrop: [],\r\n        ListProductColorForDrop: [],\r\n        ListProductNameForDrop: [],\r\n        ListItemTypeForDrop: [],\r\n        ListCurrencyForDrop: [],\r\n        ListSupplierForDrop: [],\r\n        ListStoreForDrop: [],\r\n        ListParentCategoryForDrop: [],\r\n        ListSubCategory: [],\r\n        ListSubCategoryForDrop: [],\r\n        ListProductForDrop: [],\r\n        ListProductIngredient: [],\r\n        ListDescount: [],\r\n        ListAgent: [],\r\n        ListPayment: [],\r\n        ListBankOut: [],\r\n        ListPaymentForDrop: [],\r\n        ListBankOutForDrop: [],\r\n        ListProductIngredientAccess: [],\r\n        ListEmployee:[],\r\n        ListRoleDD:[],\r\n        objCompanyInfo: {},\r\n    }","import {\r\n    combineReducers\r\n} from 'redux';\r\n\r\nimport reduces from './reduces';\r\n\r\nexport default combineReducers({\r\n    reduces\r\n});\r\n","import initialState from './initialState';\r\nimport persistState from 'redux-localstorage';\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        // reducer of Login\r\n        case 'LOGIN':\r\n            const obj = action.data.payload;\r\n            sessionStorage.setItem(\"UserType\", obj.userType);\r\n           sessionStorage.setItem(\"token\", \"Bearer \" + obj.token);\r\n            sessionStorage.removeItem(\"role_id\");\r\n            sessionStorage.removeItem(\"name\");\r\n            return {    \r\n                ...state,\r\n                token: \"Bearer \" + obj.token\r\n            };\r\n       // login-employee\r\n        case 'LOGINEMPLOYEE':\r\n            const objEmployee = action.data.payload;\r\n            sessionStorage.removeItem(\"UserType\");\r\n            sessionStorage.removeItem(\"token\");\r\n            sessionStorage.setItem(\"role_id\", objEmployee.roles_id);\r\n            sessionStorage.setItem(\"name\", objEmployee.name);\r\n       \r\n            return {\r\n                ...state,\r\n                rolePermission: objEmployee.roles_id\r\n            };\r\n        case 'LISTACCOUNTS':\r\n\r\n            return {\r\n                ...state,\r\n                ListAccounts: action.data.payload\r\n            };\r\n        case 'ACTIVEACCOUNTS':\r\n\r\n            let listAcc = state.ListAccounts;\r\n\r\n            action.ids.forEach(id => {\r\n                let indexListAcc = listAcc.findIndex(x => x.id === id);\r\n                listAcc.splice(indexListAcc, 1);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListAccounts: [...state.ListAccounts]\r\n            };\r\n\r\n        case 'LISTDATASHEETS':\r\n\r\n            return {\r\n                ...state,\r\n                ListDataSheets: action.data.payload\r\n            };\r\n\r\n        case 'DELETEDATASHEETS':\r\n            let listDataSheets = state.ListDataSheets\r\n\r\n            action.ids.map(xx => {\r\n                listDataSheets = listDataSheets.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListDataSheets: [...listDataSheets]\r\n            };\r\n\r\n        case 'ADDEDITDATASHEETS':\r\n            let listDataSheet = state.ListDataSheets;\r\n\r\n            let indexDataSheet = listDataSheet.findIndex(x => x.id === action.data.payload.id);\r\n\r\n            if (indexDataSheet > -1) {\r\n                listDataSheet.splice(indexDataSheet, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListDataSheets: [...state.ListDataSheets, action.data.payload]\r\n            };\r\n\r\n\r\n\r\n\r\n        case 'LISTCATALOGUE':\r\n\r\n            return {\r\n                ...state,\r\n                ListCatalogue: action.data.payload\r\n            };\r\n\r\n        case 'DELETECATALOGUE':\r\n            let listCatalogue = state.ListCatalogue\r\n\r\n            action.ids.map(xx => {\r\n                listCatalogue = listCatalogue.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListCatalogue: [...listCatalogue]\r\n            };\r\n\r\n        case 'ADDEDITCATALOGUE':\r\n            let listCatalogues = state.ListCatalogue;\r\n\r\n            let indexCatalogues = listCatalogues.findIndex(x => x.id === action.data.payload.id);\r\n\r\n            if (indexCatalogues > -1) {\r\n                listCatalogues.splice(indexCatalogues, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListCatalogue: [...state.ListCatalogue, action.data.payload]\r\n            };\r\n\r\n\r\n        case 'LISTFACTOR':\r\n\r\n            return {\r\n                ...state,\r\n                ListFactor: action.data.payload\r\n            };\r\n\r\n        case 'DELETEFACTOR':\r\n            let listFactor = state.ListFactor\r\n\r\n            action.ids.map(xx => {\r\n                listFactor = listFactor.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                listFactor: [...listFactor]\r\n            };\r\n\r\n        case 'ADDEDITFACTOR':\r\n            let listFactors = state.ListFactor;\r\n\r\n            let indexFactors = listFactors.findIndex(x => x.id === action.data.payload.id);\r\n\r\n            if (indexFactors > -1) {\r\n                listFactors.splice(indexFactors, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListFactor: [...state.ListFactor, action.data.payload]\r\n            };\r\n\r\n        case 'LISTPRICELST':\r\n\r\n            return {\r\n                ...state,\r\n                ListPriceLst: action.data.payload\r\n            };\r\n\r\n        case 'DELETEPRICELST':\r\n            let listPriceLst = state.ListPriceLst\r\n\r\n            action.ids.map(xx => {\r\n                listPriceLst = listPriceLst.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                listPriceLst: [...listPriceLst]\r\n            };\r\n\r\n        case 'ADDEDITPRICELST':\r\n            let listPriceLsts = state.ListPriceLst;\r\n\r\n            let indexPriceLsts = listPriceLsts.findIndex(x => x.id === action.data.payload.id);\r\n\r\n            if (indexPriceLsts > -1) {\r\n                listPriceLsts.splice(indexPriceLsts, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListPriceLst: [...state.ListPriceLst, action.data.payload]\r\n            };\r\n\r\n\r\n        case 'LISTCLIENTCOMM':\r\n\r\n            return {\r\n                ...state,\r\n                ListClientComm: action.data.payload\r\n            };\r\n\r\n        case 'DELETECLIENTCOMM':\r\n            let listClientComm = state.ListClientComm\r\n\r\n            action.ids.map(xx => {\r\n                listClientComm = listClientComm.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                listClientComm: [...listClientComm]\r\n            };\r\n\r\n        case 'ADDEDITCLIENTCOMM':\r\n            let listClientComms = state.ListClientComm;\r\n\r\n            let indexClientComms = listClientComms.findIndex(x => x.id === action.data.payload.id);\r\n\r\n            if (indexClientComms > -1) {\r\n                indexClientComms.splice(indexClientComms, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListClientComm: [...state.ListClientComm, action.data.payload]\r\n            };\r\n        case 'COMPANYINFO':\r\n\r\n            return {\r\n                ...state,\r\n                objCompanyInfo: action.data\r\n            };\r\n\r\n        case 'ADDEDITCOMPANYINFO':\r\n\r\n            return {\r\n                ...state,\r\n                objCompanyInfo: action.data\r\n            };\r\n\r\n        case 'GETALLCATEGORYTYPE':\r\n            return {\r\n                ...state,\r\n                ListCategoryType: action.data\r\n            };\r\n\r\n        case 'DELETECATEGORYTYPE':\r\n            let listCategoryType = state.ListCategoryType\r\n\r\n            action.ids.map(xx => {\r\n                listCategoryType = listCategoryType.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListCategoryType: [...listCategoryType]\r\n            };\r\n\r\n        case 'ADDEDITCATEGORYTYPE':\r\n            let _listCategoryType = state.ListCategoryType;\r\n\r\n            let indexCategoryType = _listCategoryType.findIndex(x => x.id === action.data.payload.id);\r\n\r\n            if (indexCategoryType > -1) {\r\n                _listCategoryType.splice(indexCategoryType, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListCategoryType: [...state.ListCategoryType, action.data.payload]\r\n            };\r\n\r\n        case 'GETALLCATEGORYTYPEFORDROP':\r\n            let objCategoryType = [];\r\n\r\n            action.data.forEach(item => {\r\n                let objDept = {\r\n                    value: item.id,\r\n                    label: item.name\r\n                }\r\n                objCategoryType.push(objDept);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                listCategoryForDrop: objCategoryType\r\n            };\r\n\r\n        case 'GETALLCATEGORYGALLERY':\r\n            return {\r\n                ...state,\r\n                ListCategoryGallery: action.data\r\n            };\r\n\r\n        case 'ADDEDITCATEGORYGALLERY':\r\n            let _listCategoryGallery = state.ListCategoryGallery;\r\n\r\n            let indexCategoryGallery = _listCategoryGallery.findIndex(x => x.id === action.data.id);\r\n\r\n            if (indexCategoryGallery > -1) {\r\n                _listCategoryGallery.splice(indexCategoryGallery, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListCategoryGallery: [...state.ListCategoryGallery, action.data]\r\n            };\r\n\r\n        case 'DELETECATEGORYGALLERY':\r\n            let listCategoryGallery = state.ListCategoryGallery\r\n\r\n            action.ids.map(xx => {\r\n                listCategoryGallery = listCategoryGallery.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListCategoryGallery: [...listCategoryGallery]\r\n            };\r\n\r\n\r\n\r\n\r\n        case 'GETALLCATEGORYGALLERYFORDROP':\r\n            let objCategoryGallery = [];\r\n            action.data.forEach(item => {\r\n                let objDept = {\r\n                    value: item.id,\r\n                    label: item.categoryName\r\n                }\r\n\r\n                objCategoryGallery.push(objDept);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                listCategoryGalleryForDrop: objCategoryGallery\r\n            };\r\n\r\n        case 'GETALLCATEGORYCHILDGALLERY':\r\n            return {\r\n                ...state,\r\n                ListCategoryChildGallery: action.data\r\n            };\r\n\r\n        case 'ADDEDITCATEGORYCHILDGALLERY':\r\n            let _listCategoryChildGallery = state.ListCategoryChildGallery;\r\n\r\n            let indexCategoryChildGallery = _listCategoryChildGallery.findIndex(x => x.id === action.data.id);\r\n\r\n            if (indexCategoryChildGallery > -1) {\r\n                _listCategoryChildGallery.splice(indexCategoryChildGallery, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListCategoryChildGallery: [...state.ListCategoryChildGallery, action.data]\r\n            };\r\n\r\n        case 'DELETECATEGORYCHILDGALLERY':\r\n            let listCategoryChildGallery = state.ListCategoryChildGallery\r\n\r\n            action.ids.map(xx => {\r\n                listCategoryChildGallery = listCategoryChildGallery.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListCategoryChildGallery: [...listCategoryChildGallery]\r\n            };\r\n\r\n\r\n\r\n        case 'GETALLCATEGORYCHILDGALLERYFORDROP':\r\n            let objCategoryChildGallery = [];\r\n            action.data.forEach(item => {\r\n                let objDept = {\r\n                    value: item.id,\r\n                    label: item.categoryChildName\r\n                }\r\n\r\n                objCategoryChildGallery.push(objDept);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                listCategoryChildGalleryForDrop: objCategoryChildGallery\r\n            };\r\n\r\n        case 'GALLERYType':\r\n            return {\r\n                ...state,\r\n                listGallery: action.data\r\n            };\r\n\r\n        case 'ADDEDITGALLERY':\r\n            let _listGallery = state.listGallery;\r\n\r\n            let indexGallery = _listGallery.findIndex(x => x.id === action.data.id);\r\n\r\n            if (indexGallery > -1) {\r\n                _listGallery.splice(indexGallery, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                listGallery: [...state.listGallery, action.data]\r\n            };\r\n\r\n        case 'DELETEGALLERY':\r\n            let listGallery = state.listGallery\r\n\r\n            action.ids.map(xx => {\r\n                listGallery = listGallery.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                listGallery: [...listGallery]\r\n            };\r\n\r\n\r\n        case 'GETALLCOLORS':\r\n            return {\r\n                ...state,\r\n                ListColors: action.data\r\n            };\r\n\r\n        case 'ADDEDITCOLORS':\r\n            let _ListColors = state.ListColors;\r\n\r\n            let indexColors = _ListColors.findIndex(x => x.id === action.data.id);\r\n\r\n            if (indexColors > -1) {\r\n                _ListColors.splice(indexColors, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListColors: [...state.ListColors, action.data]\r\n            };\r\n\r\n        case 'DELETECOLORS':\r\n            let listColors = state.ListColors\r\n\r\n            action.ids.map(xx => {\r\n                listColors = listColors.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListColors: [...listColors]\r\n            };\r\n\r\n\r\n\r\n        case 'GETALLPARENTCATEGORY':\r\n            return {\r\n                ...state,\r\n                ListParentCategory: action.data\r\n            };\r\n\r\n        case 'ADDEDITPARENTCATEGORY':\r\n            let _ListParentCategory = state.ListParentCategory;\r\n\r\n            let indexParentCategory = _ListParentCategory.findIndex(x => x.id === action.data.id);\r\n\r\n            if (indexParentCategory > -1) {\r\n                _ListParentCategory.splice(indexParentCategory, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListParentCategory: [...state.ListParentCategory, action.data]\r\n            };\r\n\r\n        case 'DELETEPARENTCATEGORY':\r\n            let listParentCategory = state.ListParentCategory\r\n\r\n            action.ids.map(xx => {\r\n                listParentCategory = listParentCategory.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListParentCategory: [...listParentCategory]\r\n            };\r\n\r\n\r\n        case 'GETALLPRODUCTNAME':\r\n            return {\r\n                ...state,\r\n                ListProductName: action.data\r\n            };\r\n\r\n        case 'ADDEDITPRODUCTNAME':\r\n            let _ListProductName = state.ListProductName;\r\n\r\n            let indexProductName = _ListProductName.findIndex(x => x.id === action.data.id);\r\n\r\n            if (indexProductName > -1) {\r\n                _ListProductName.splice(indexProductName, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListProductName: [...state.ListProductName, action.data]\r\n            };\r\n\r\n        case 'DELETEPRODUCTNAME':\r\n            let listProductName = state.ListProductName\r\n\r\n            action.ids.map(xx => {\r\n                listProductName = listProductName.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListProductName: [...listProductName]\r\n            };\r\n\r\n\r\n        case 'GETALLPARENTPRODUCTCATEGORY':\r\n            return {\r\n                ...state,\r\n                ListParentProductCategory: action.data\r\n            };\r\n\r\n        case 'ADDEDITPARENTPRODUCTCATEGORY':\r\n            let _ListParentProductCategory = state.ListParentProductCategory;\r\n\r\n            let indexParentProductCategory = _ListParentProductCategory.findIndex(x => x.id === action.data.id);\r\n\r\n            if (indexParentProductCategory > -1) {\r\n                _ListParentProductCategory.splice(indexParentProductCategory, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListParentProductCategory: [...state.ListParentProductCategory, action.data]\r\n            };\r\n\r\n        case 'DELETEPARENTPRODUCTCATEGORY':\r\n            let listParentProductCategory = state.ListParentProductCategory\r\n\r\n            action.ids.map(xx => {\r\n                listParentProductCategory = listParentProductCategory.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListParentProductCategory: [...listParentProductCategory]\r\n            };\r\n\r\n\r\n        case 'GETALLPARENTPRODUCTCATEGORYFORDROP':\r\n            let objCategory = [];\r\n            action.data.forEach(item => {\r\n                let objDept = {\r\n                    value: item.id,\r\n                    label: item.catgoryName\r\n                }\r\n\r\n                objCategory.push(objDept);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListParentProductCategoryForDrop: objCategory\r\n            };\r\n\r\n\r\n        case 'GETALLCATEGORY':\r\n            return {\r\n                ...state,\r\n                listCategory: action.data\r\n            };\r\n\r\n        case 'ADDEDITCATEGORY':\r\n            let _listCategory = state.listCategory;\r\n\r\n            let indexCategory = _listCategory.findIndex(x => x.id === action.data.id);\r\n\r\n            if (indexCategory > -1) {\r\n                _listCategory.splice(indexCategory, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                listCategory: [...state.listCategory, action.data]\r\n            };\r\n\r\n        case 'DELETECATEGORY':\r\n            let ListCategory = state.listCategory\r\n\r\n            action.ids.map(xx => {\r\n                ListCategory = ListCategory.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                listCategory: [...ListCategory]\r\n            };\r\n\r\n\r\n        case 'PRODUCTFORDROP':\r\n            let objProductName = [];\r\n            action.data.forEach(item => {\r\n                let objDept = {\r\n                    value: item.id,\r\n                    label: item.productName\r\n                }\r\n\r\n                objProductName.push(objDept);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListProductNameForDrop: objProductName\r\n            };\r\n\r\n        case 'COLORSFORDROP':\r\n            let objProductColor = [];\r\n            action.data.forEach(item => {\r\n                let objDept = {\r\n                    value: item.id,\r\n                    label: item.colorName\r\n                }\r\n\r\n                objProductColor.push(objDept);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListProductColorForDrop: objProductColor\r\n            };\r\n\r\n        case 'CATEGORYFORDROP':\r\n            let objProductCategory = [];\r\n            action.data.forEach(item => {\r\n                let objDept = {\r\n                    value: item.id,\r\n                    label: item.categoryName\r\n                }\r\n\r\n                objProductCategory.push(objDept);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListProductCategoryForDrop: objProductCategory\r\n            };\r\n\r\n        case 'GETALLPRODUCT':\r\n            return {\r\n                ...state,\r\n                listProducts: action.data\r\n            };\r\n\r\n        case 'ADDEDITPRODUCT':\r\n            let _listProducts = state.listProducts;\r\n\r\n            let indexProducts = _listProducts.findIndex(x => x.id === action.data.id);\r\n\r\n            if (indexProducts > -1) {\r\n                _listProducts.splice(indexProducts, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                listProducts: [...state.listProducts, action.data]\r\n            };\r\n\r\n        case 'DELETEPRODUCT':\r\n            let ListProducts = state.listProducts\r\n\r\n            action.ids.map(xx => {\r\n                ListProducts = ListProducts.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                listProducts: [...ListProducts]\r\n            };\r\n\r\n        case 'PARENTCATEGORY':\r\n            let objParentCategory = [];\r\n            action.data.forEach(item => {\r\n                let objDept = {\r\n                    value: item.id,\r\n                    label: item.name\r\n                }\r\n\r\n                objParentCategory.push(objDept);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListParentCategoryForDrop: objParentCategory\r\n            };\r\n\r\n\r\n        case 'GETALLSUBCATEGORY':\r\n            return {\r\n                ...state,\r\n                ListSubCategory: action.data\r\n            };\r\n\r\n        case 'ADDEDITSUBCATEGORY':\r\n            let _listSubCategory = state.ListSubCategory;\r\n\r\n            let indexSubCategory = _listSubCategory.findIndex(x => x.id === action.data.id);\r\n\r\n            if (indexSubCategory > -1) {\r\n                _listSubCategory.splice(indexSubCategory, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListSubCategory: [...state.ListSubCategory, action.data]\r\n            };\r\n\r\n        case 'DELETESUBCATEGORY':\r\n            let listSubCategory = state.ListSubCategory\r\n\r\n            action.ids.map(xx => {\r\n                listSubCategory = listSubCategory.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListSubCategory: [...listSubCategory]\r\n            };\r\n\r\n\r\n        case 'GETSUBCATEGORYFORDROP':\r\n            let objSubCategory = [];\r\n            action.data.forEach(item => {\r\n                let objDept = {\r\n                    value: item.id,\r\n                    label: item.name\r\n                }\r\n\r\n                objSubCategory.push(objDept);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListSubCategoryForDrop: objSubCategory\r\n            };\r\n\r\n        case 'GETPRODUCTFORDROP':\r\n            let objProduct = [];\r\n            action.data.forEach(item => {\r\n                let objDept = {\r\n                    value: item.id,\r\n                    label: item.productName\r\n                }\r\n\r\n                objProduct.push(objDept);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListProductForDrop: objProduct\r\n            };\r\n\r\n\r\n\r\n        case 'ADDEDITPRODUCTING':\r\n            let _listProductIngredient = state.ListProductIngredient;\r\n\r\n            let indexProductIngredient = _listProductIngredient.findIndex(x => x.id === action.data.id);\r\n\r\n            if (indexProductIngredient > -1) {\r\n                _listProductIngredient.splice(indexProductIngredient, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListProductIngredient: [...state.ListProductIngredient, action.data]\r\n            };\r\n\r\n        case 'DELETEPRODUCTING':\r\n            let listProductIngredient = state.ListProductIngredient\r\n\r\n            action.ids.map(xx => {\r\n                listProductIngredient = listProductIngredient.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListProductIngredient: [...listProductIngredient]\r\n            };\r\n\r\n        case 'GETALLPRODUCTING':\r\n            return {\r\n                ...state,\r\n                ListProductIngredient: action.data\r\n            };\r\n\r\n        case 'LISTACCOUNTSACTIVENOTACTIVE':\r\n            return {\r\n                ...state,\r\n                ListAccountsActiveNotActive: action.data\r\n            };\r\n\r\n        case 'GETPARENTPRODUCTFORDROP':\r\n            let _objParentCategory = [];\r\n            action.data.forEach(item => {\r\n                let objDept = {\r\n                    value: item.id,\r\n                    label: item.catgoryName\r\n                }\r\n\r\n                _objParentCategory.push(objDept);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListParentCategoryForDrop: _objParentCategory\r\n            };\r\n\r\n\r\n\r\n        case 'ADDEDITDESCOUNT':\r\n            let _listDescount = state.ListDescount;\r\n\r\n            let indexDescount = _listDescount.findIndex(x => x.id === action.data.id);\r\n\r\n            if (indexDescount > -1) {\r\n                _listDescount.splice(indexDescount, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListDescount: [...state.ListDescount, action.data]\r\n            };\r\n\r\n        case 'DELETEDESCOUNT':\r\n            let listDescount = state.ListDescount\r\n\r\n            action.ids.map(xx => {\r\n                listDescount = listDescount.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListDescount: [...listDescount]\r\n            };\r\n\r\n        case 'GETALLDESCOUNT':\r\n            return {\r\n                ...state,\r\n                ListDescount: action.data\r\n            };\r\n\r\n\r\n\r\n\r\n        case 'ADDEDITINGREACCESS':\r\n            let _listProductIngredientAccess = state.ListProductIngredientAccess;\r\n\r\n            let indexProductIngredientAccess = _listProductIngredientAccess.findIndex(x => x.id === action.data.id);\r\n\r\n            if (indexProductIngredientAccess > -1) {\r\n                _listProductIngredientAccess.splice(indexProductIngredientAccess, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListProductIngredientAccess: [...state.ListProductIngredientAccess, action.data]\r\n            };\r\n\r\n        case 'DELETEINGREACCESS':\r\n            let listProductIngredientAccess = state.ListProductIngredientAccess\r\n\r\n            action.ids.map(xx => {\r\n                listProductIngredientAccess = listProductIngredientAccess.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListProductIngredientAccess: [...listProductIngredientAccess]\r\n            };\r\n\r\n        case 'GETALLINGREACCESS':\r\n            return {\r\n                ...state,\r\n                ListProductIngredientAccess: action.data\r\n            };\r\n\r\n        case 'RESETPASSWORD':\r\n            return {\r\n                ...state\r\n            };\r\n\r\n        default:\r\n            return {\r\n                ...state\r\n            };\r\n        //MESSAGES\r\n        case 'LISTMESSAGES':\r\n            return {\r\n                ...state,\r\n                ListMessage: action.data.payload\r\n            };\r\n\r\n        //supplier\r\n        case 'LISTSUPPLIER':\r\n\r\n            return {\r\n                ...state,\r\n                ListSupplier: action.data.payload\r\n            };\r\n        case 'COUNTSUPPLIER':\r\n\r\n            return {\r\n                ...state,\r\n                CountSupplier: action.data\r\n            };\r\n        case 'DELETESUPPLIER':\r\n            let ListSupplier = state.ListSupplier\r\n\r\n            action.ids.map(xx => {\r\n                ListSupplier = ListSupplier.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListSupplier: [...ListSupplier]\r\n            };\r\n\r\n        case 'ADDEDITSUPPLIER':\r\n            let ListSuppliers = state.ListSupplier;\r\n\r\n            let indexSuppliers = ListSuppliers.findIndex(x => x.id === action.data.payload.id);\r\n\r\n            if (indexSuppliers > -1) {\r\n                ListSuppliers.splice(indexSuppliers, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListSupplier: [...state.ListSupplier, action.data.payload]\r\n            };\r\n        case 'LISTSUPPLIERFORDROP':\r\n            let objSuppliers = [];\r\n            action.data.forEach(item => {\r\n                let objSupplier = {\r\n                    value: item.id,\r\n                    label: item.name\r\n                }\r\n\r\n                objSuppliers.push(objSupplier);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListSupplierForDrop: objSuppliers\r\n            };\r\n        //agent\r\n        case 'LISTAGENT':\r\n            return {\r\n                ...state,\r\n                ListAgent: action.data.payload\r\n            };\r\n\r\n        case 'DELETEAGENT':\r\n            let ListAgent = state.ListAgent\r\n\r\n            action.ids.map(xx => {\r\n                ListAgent = ListAgent.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListAgent: [...ListAgent]\r\n            };\r\n        //store\r\n        case 'LISTSTORE':\r\n\r\n            return {\r\n                ...state,\r\n                ListStore: action.data.payload\r\n            };\r\n\r\n        case 'DELETESTORE':\r\n            let ListStore = state.ListStore\r\n\r\n            action.ids.map(xx => {\r\n                ListStore = ListStore.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListStore: [...ListStore]\r\n            };\r\n\r\n        case 'ADDEDITSTORE':\r\n            let ListStores = state.ListStore;\r\n\r\n            let indexStores = ListStores.findIndex(x => x.id === action.data.payload.id);\r\n\r\n            if (indexStores > -1) {\r\n                ListStores.splice(ListStores, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListStore: [...state.ListStore, action.data.payload]\r\n            };\r\n        case 'LISTSTOREFORDROP':\r\n            let objStores = [];\r\n            action.data.forEach(item => {\r\n                let objStore = {\r\n                    value: item.id,\r\n                    label: item.storeName\r\n                }\r\n\r\n                objStores.push(objStore);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListStoreForDrop: objStores\r\n            };\r\n\r\n        //bank\r\n        case 'LISTBANKOut':\r\n\r\n            return {\r\n                ...state,\r\n                ListBankOut: action.data.payload\r\n            };\r\n        //bank outside\r\n        case 'LISTBANKOutDROP':\r\n            let objBankOuts = [];\r\n            action.data.forEach(item => {\r\n                let objBankOut = {\r\n                    value: item.id,\r\n                    label: item.nameBank\r\n                }\r\n\r\n                objBankOuts.push(objBankOut);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListBankOutForDrop: objBankOuts\r\n            };\r\n            \r\n        case 'DELETEBANKOut':\r\n            let ListBankOut = state.ListBankOut\r\n\r\n            action.ids.map(xx => {\r\n                ListBankOut = ListBankOut.filter(x => x.id !== xx);\r\n            });\r\n            return {\r\n                ...state,\r\n                ListBankOut: [...ListBankOut]\r\n            };\r\n\r\n        case 'ADDEDITBANKOut':\r\n            let ListBankOuts = state.ListBankOut;\r\n\r\n            let indexBankOuts = ListBankOuts.findIndex(x => x.id === action.data.payload.id);\r\n\r\n            if (indexBankOuts > -1) {\r\n                ListBankOuts.splice(ListBankOuts, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListBankOut: [...state.ListBankOut, action.data.payload]\r\n            };\r\n            case 'LISTBANKOut':\r\n\r\n                return {\r\n                    ...state,\r\n                    ListBankOut: action.data.payload\r\n                };\r\n            //EMPLOYEES\r\n            case 'LISTEMPLOYEE':               \r\n                return {\r\n                    ...state,\r\n                    ListEmployee: action.data.payload\r\n                };\r\n    \r\n            case 'DELETEEMPLOYEE':\r\n                let ListEmployee = state.ListEmployee\r\n    \r\n                action.ids.map(xx => {\r\n                    ListEmployee = ListEmployee.filter(x => x.id !== xx);\r\n                });\r\n                return {\r\n                    ...state,\r\n                    ListEmployee: [...ListEmployee]\r\n                };\r\n    \r\n            case 'ADDEDITEMPLOYEE':\r\n                let ListEmployees = state.ListEmployee;\r\n    \r\n                let indexemps = ListEmployees.findIndex(x => x.id === action.data.payload.id);\r\n    \r\n                if (indexemps > -1) {\r\n                    ListEmployees.splice(ListEmployees, 1);\r\n                }\r\n    \r\n                return {\r\n                    ...state,\r\n                    ListEmployee: [...state.ListEmployee, action.data.payload]\r\n                };\r\n                //roles\r\n                case 'LISTROLEDD':\r\n                    let objRoles = [];\r\n                    action.data.forEach(item => {\r\n                        let objRole = {\r\n                            value: item.id,\r\n                            label: item.name\r\n                        }\r\n        \r\n                        objRoles.push(objRole);\r\n                    });\r\n        \r\n                    return {\r\n                        ...state,\r\n                        ListRoleDD: objRoles\r\n                    };\r\n        //itemtype\r\n        case 'LISTITEMTYPE':\r\n\r\n            return {\r\n                ...state,\r\n                ListItemType: action.data.payload\r\n            };\r\n\r\n        case 'DELETEITEMTYPE':\r\n            let ListItemType = state.ListItemType\r\n\r\n            action.ids.map(xx => {\r\n                ListItemType = ListItemType.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListItemType: [...ListItemType]\r\n            };\r\n\r\n        case 'ADDEDITITEMTYPE':\r\n            let ListItemTypes = state.ListItemType;\r\n\r\n            let indexItemTypes = ListItemTypes.findIndex(x => x.id === action.data.payload.id);\r\n\r\n            if (indexItemTypes > -1) {\r\n                ListItemTypes.splice(indexItemTypes, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListItemType: [...state.ListItemType, action.data.payload]\r\n            };\r\n        case 'LISTITEMTYPEFORDROP':\r\n            let objItemTypes = [];\r\n            action.data.forEach(item => {\r\n                let objItemType = {\r\n                    value: item.id,\r\n                    label: item.nameItemType\r\n                }\r\n\r\n                objItemTypes.push(objItemType);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListItemTypeForDrop: objItemTypes\r\n            };\r\n\r\n        //bank\r\n        case 'LISTBANK':\r\n\r\n            return {\r\n                ...state,\r\n                ListBank: action.data.payload\r\n            };\r\n\r\n        case 'DELETEBANK':\r\n            let ListBank = state.ListBank\r\n\r\n            action.ids.map(xx => {\r\n                ListBank = ListBank.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListBank: [...ListBank]\r\n            };\r\n\r\n        case 'ADDEDITBANK':\r\n            let ListBanks = state.ListBank;\r\n\r\n            let indexListBanks = ListBanks.findIndex(x => x.id === action.data.payload.id);\r\n\r\n            if (indexListBanks > -1) {\r\n                ListBanks.splice(indexListBanks, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListBank: [...state.ListBank, action.data.payload]\r\n            };\r\n        case 'LISTBANKDROP':\r\n            let objBanks = [];\r\n            action.data.forEach(item => {\r\n                let objBank = {\r\n                    value: item.id,\r\n                    label: item.nameBank\r\n                }\r\n                objBanks.push(objBank);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListBankForDrop: objBanks\r\n            };\r\n        //payment\r\n        case 'LISTPAYMENTFORDROP':\r\n            let objPayments = [];\r\n            action.data.forEach(item => {\r\n                let objPayment = {\r\n                    value: item.id,\r\n                    label: item.namePaymentMethod\r\n                }\r\n                objPayments.push(objPayment);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListPaymentForDrop: objPayments\r\n            };\r\n        //Currency\r\n        case 'LISTCURRENCY':\r\n\r\n            return {\r\n                ...state,\r\n                ListCurrency: action.data.payload\r\n            };\r\n\r\n        case 'DELETEITCURRENCY':\r\n            let ListCurrency = state.ListCurrency\r\n\r\n            action.ids.map(xx => {\r\n                ListCurrency = ListCurrency.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListCurrency: [...ListCurrency]\r\n            };\r\n\r\n        case 'ADDEDITCURRENCY':\r\n            let ListCurrencys = state.ListCurrency;\r\n\r\n            let indexCurrencys = ListCurrencys.findIndex(x => x.id === action.data.payload.id);\r\n\r\n            if (indexCurrencys > -1) {\r\n                ListCurrencys.splice(ListCurrencys, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListCurrency: [...state.ListCurrency, action.data.payload]\r\n            };\r\n        case 'LISTCURRENCYFORDROP':\r\n            let objCurrencys = [];\r\n            action.data.forEach(item => {\r\n                let objCurrency = {\r\n                    value: item.id,\r\n                    label: item.nameCurrency\r\n                }\r\n\r\n                objCurrencys.push(objCurrency);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListCurrencyForDrop: objCurrencys\r\n            };\r\n        //purchase\r\n        case 'LISTPURCHASE':\r\n\r\n            return {\r\n                ...state,\r\n                ListPurchase: action.data.payload\r\n            };\r\n\r\n        case 'DELETEPURCHASE':\r\n            let ListPurchase = state.ListPurchase\r\n\r\n            action.ids.map(xx => {\r\n                ListPurchase = ListPurchase.filter(x => x.id !== xx);\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ListPurchase: [...ListPurchase]\r\n            };\r\n\r\n        case 'ADDEDITPURCHASE':\r\n            let ListPurchases = state.ListPurchase;\r\n\r\n            let indexPurchasess = ListPurchases.findIndex(x => x.id === action.data.payload.id);\r\n\r\n            if (indexPurchasess > -1) {\r\n                ListPurchases.splice(indexPurchasess, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListPurchase: [...state.ListPurchase, action.data.payload]\r\n            };\r\n        // ?????\r\n        case 'ADDDEPOSIT':\r\n            let ListBankOutDeposite = state.ListBankOut;\r\n\r\n            let indexBankOut = ListBankOutDeposite.findIndex(x => x.id === action.data.payload.id);\r\n\r\n            if (indexBankOut > -1) {\r\n                ListBankOutDeposite.splice(indexBankOut, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListBankOutDeposite: [...state.ListBankOut, action.data.payload]\r\n            };\r\n        // ???\r\n        case 'DECDEPOSIT':\r\n            let ListBankOutDepositedec = state.ListBankOut;\r\n\r\n            let indexBankOutdec = ListBankOutDepositedec.findIndex(x => x.id === action.data.payload.id);\r\n\r\n            if (indexBankOutdec > -1) {\r\n                ListBankOutDepositedec.splice(indexBankOut, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ListBankOutDepositedec: [...state.ListBankOut, action.data.payload]\r\n            };\r\n    }\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from '../reducers';\r\n\r\nfunction create() {\r\n    const store = createStore(reducers, applyMiddleware(thunk));\r\n    return store;\r\n}\r\n\r\nexport default { create };\r\n","import React, { Fragment } from 'react';\r\n\r\n\r\nconst LoadingPage = (props) => {\r\n    const style = {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        top: '50%',\r\n        zIndex: 1,\r\n        width: '150px',\r\n        height: '150px',\r\n        margin: '-75px 0 0 -75px',\r\n        border: '16px solid #f3f3f3',\r\n        borderRadius: '50%',\r\n        borderTop: '16px solid #3498db',\r\n        width: '120px',\r\n        height: '120px',\r\n        //-webkit-animation: 'spin 2s linear infinite',\r\n        animation: 'spin 2s linear infinite'\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div style={style}></div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default LoadingPage;\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\r\nimport Loading from '../screens/LoadingPage/LoadingPage';\r\n\r\n//layOut\r\nconst LayOut = lazy(() => import(\"../screens/LayOut/LayOut\"));\r\n\r\n// pages\r\nconst DashBoard = lazy(() => import(\"../screens/LayOut/DashBoard\"));\r\n//const DashBoardStore = lazy(() => import(\"../screens/LayOut/DashBoardStore\"));\r\n\r\nconst Accounts = lazy(() => import(\"../screens/Accounts/Accounts\"));\r\nconst Products = lazy(() => import(\"../screens/Products/Products\"));\r\nconst PurchaseOrder = lazy(() => import(\"../screens/PurchaseOrder/PurchaseOrder\"));\r\nconst PurchaseOrderAddEdit = lazy(() => import(\"../screens/PurchaseOrder/PurchaseOrderAddEdit\"));\r\nconst Login = lazy(() => import(\"../components/Login/Login\"));\r\nconst DataSheet = lazy(() => import(\"../screens/DataSheet/DataSheet\"));\r\nconst Catalogue = lazy(() => import(\"../screens/Catalogue/Catalogue\"));\r\nconst Factor = lazy(() => import(\"../screens/Factor/Factor\"));\r\nconst Agents = lazy(() => import(\"../screens/Agents/Agents\"));\r\nconst PriceLst = lazy(() => import(\"../screens/PriceLst/PriceLst\"));\r\nconst ClientComments = lazy(() => import(\"../screens/ClientComments/ClientComments\"));\r\nconst Employee = lazy(() => import(\"../screens/Employee/Employee\"));\r\nconst CompanyInfo = lazy(() => import(\"../screens/CompanyInfo/CompanyInfo\"));\r\nconst CategoryType = lazy(() => import(\"../screens/CategoryType/CategoryType\"));\r\nconst CategoryGallery = lazy(() => import(\"../screens/CategoryGallery/CategoryGallery\"));\r\nconst GalleryImage = lazy(() => import(\"../screens/GallaryFileType/GallaryTypeImages\"));\r\nconst GallaryFile = lazy(() => import(\"../screens/GallaryFileType/GallaryTypeFile\"));\r\nconst GallaryVideo = lazy(() => import(\"../screens/GallaryFileType/GallaryTypeVideo\"));\r\nconst Colors = lazy(() => import(\"../screens/Colors/Colors\"));\r\nconst ParentCategory = lazy(() => import(\"../screens/ParentCategory/ParentCategory\"));\r\nconst ProductName = lazy(() => import(\"../screens/ProductName/ProductName\"));\r\nconst ProductInfo = lazy(() => import(\"../screens/ProductInfo/ProductInfo\"));\r\nconst Category = lazy(() => import(\"../screens/Category/Category\"));\r\nconst ChildCategory = lazy(() => import(\"../screens/ChildCategory/ChildCategory\"));\r\nconst ProductIngredient = lazy(() => import(\"../screens/ProductIngredient/ProductIngredient\"));\r\nconst ProductIngredientAccessory = lazy(() => import(\"../screens/ProductIngredient/ProductIngredientAccessory\"));\r\nconst Descount = lazy(() => import(\"../screens/Descount/Descount\"));\r\nconst ParentProductCategory = lazy(() => import(\"../screens/ParentProductCategory/ParentProductCategory\"));\r\nconst CategoryChildGallery = lazy(() => import(\"../screens/CategoryChildGallery/CategoryChildGallery\"));\r\nconst Supplier = lazy(() => import(\"../screens/Supplier/Suppliers\"));\r\nconst Store = lazy(() => import(\"../screens/Store/Store\"));\r\nconst ItemType = lazy(() => import(\"../screens/ItemType/ItemType\"));\r\nconst Messages = lazy(() => import(\"../screens/Messages/Messages\"));\r\nconst Bank = lazy(() => import(\"../screens/Bank/Bank\"));\r\nconst Purchase = lazy(() => import(\"../screens/Purchase/Purchase\"));\r\nconst Currency = lazy(() => import(\"../screens/Currency/Currency\"));\r\nconst MainPurchase = lazy(() => import(\"../screens/MainPurchase/MainPurchase\"));\r\nconst ActiveUnActiveAccount = lazy(() => import(\"../screens/Accounts/ActiveUnActiveAccount\"));\r\nconst Banks = lazy(() => import(\"../screens/Banks/Banks\"));\r\n\r\n\r\nconst RouterDocument = () => {\r\n    return (\r\n        <Suspense fallback={<Loading />}>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/Login\" component={Login} />\r\n                    {/*<Route exact path=\"/index-1.html\" render={() => { window.location.href = \"index-1.html\" }} />*/}\r\n                    <LayOut>\r\n                        <Switch>\r\n                            <Route path=\"/System/DashBoard\" component={DashBoard} />\r\n                            {/*<Route path=\"/System/DashBoardStore\" component={DashBoardStore} />*/}\r\n                            <Route path=\"/System/Accounts\" component={Accounts} />\r\n                            <Route path=\"/System/DataSheet\" component={DataSheet} />\r\n                            <Route path=\"/System/Catalogue\" component={Catalogue} />\r\n                            <Route path=\"/System/PriceLst\" component={PriceLst} />\r\n                            <Route path=\"/System/ClientComments\" component={ClientComments} />\r\n                            <Route path=\"/System/ActiveUnActiveAccount\" component={ActiveUnActiveAccount} />\r\n                            <Route path=\"/System/Factor\" component={Factor} />\r\n                            <Route path=\"/System/CompanyInfo\" component={CompanyInfo} />\r\n                            <Route path=\"/System/Products\" component={Products} />\r\n                            <Route path=\"/System/PurchaseOrder\" component={PurchaseOrder} />\r\n                            <Route path=\"/System/CategoryType\" component={CategoryType} />\r\n                            <Route path=\"/System/CategoryGallery\" component={CategoryGallery} />\r\n                            <Route path=\"/System/ChildCategory\" component={ChildCategory} />\r\n                            <Route path=\"/System/GalleryImage\" component={GalleryImage} />\r\n                            <Route path=\"/System/GallaryFile\" component={GallaryFile} />\r\n                            <Route path=\"/System/GallaryVideo\" component={GallaryVideo} />\r\n                            <Route path=\"/System/Colors\" component={Colors} />\r\n                            <Route path=\"/System/ProductName\" component={ProductName} />\r\n                            <Route path=\"/System/ParentCategory\" component={ParentCategory} />\r\n                            <Route path=\"/System/ProductInfo\" component={ProductInfo} />\r\n                            <Route path=\"/System/Category\" component={Category} />\r\n                            <Route path=\"/System/Descount\" component={Descount} />\r\n                            <Route path=\"/System/ProductIngredientAccessory\" component={ProductIngredientAccessory} />\r\n                            <Route path=\"/System/ProductIngredient\" component={ProductIngredient} />\r\n                            <Route path=\"/System/ParentProductCategory\" component={ParentProductCategory} />\r\n                            <Route path=\"/System/CategoryChildGallery\" component={CategoryChildGallery} />\r\n                            <Route path=\"/System/PurchaseOrderAddEdit/:id\" component={PurchaseOrderAddEdit} />\r\n                            <Route path=\"/System/Supplier\" component={Supplier} />\r\n                            <Route path=\"/System/Store\" component={Store} />\r\n                            <Route path=\"/System/ItemType\" component={ItemType} />\r\n                            <Route path=\"/System/Bank\" component={Bank} />\r\n                            <Route path=\"/System/Employee\" component={Employee} />\r\n                            <Route path=\"/System/Purchase\" component={Purchase} />\r\n                            <Route path=\"/System/MainPurchase\" component={MainPurchase} />\r\n                            <Route path=\"/System/Currency\" component={Currency} />\r\n                            <Route path=\"/System/Messages\" component={Messages} />\r\n                            <Route path=\"/System/Agents\" component={Agents} />\r\n                            <Route path=\"/System/Banks\" component={Banks} />\r\n                        </Switch>\r\n                    </LayOut>\r\n                </Switch>\r\n            </Router>\r\n        </Suspense>\r\n    );\r\n};\r\n\r\nexport default RouterDocument;","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport createStore from '../src/redux/store';\r\nimport Router from '../src/router/router';\r\n//import '../src/Design/CSS/bootstrap.min.css';\r\n//import '../src/Design/CSS/icon.css';\r\n//import '../src/Design/CSS/style.css';\r\n//import '../src/Design/CSS/ar.css';\r\nimport 'toastr/build/toastr.min.css';\r\n/*import 'react-tabs/style/react-tabs.css';*/\r\n\r\nconst store = createStore.create();\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let url = window.location.pathname;\r\n\r\n        if (url == \"/\") {\r\n            window.location.href = \"/index-5.html\";\r\n        }\r\n\r\n\r\n        this.state = {\r\n            isTrust: false,\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //  toastr.options.rtl = true;\r\n\r\n        return (\r\n            <Provider store={store}>\r\n                <Router />\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}